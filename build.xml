<?xml version="1.0" encoding="UTF-8"?>

<project name="Jenkins-CI" default="build" basedir=".">
	<target name="build"
		depends="prepare,vendors-ci,phpmd-ci,phploc,pdepend,phpcs-ci,phpcpd"/>

	<target name="build-parallel" depends="prepare,tools-parallel"/>

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend"/>
				<antcall target="phpmd-ci"/>
			</sequential>
			<antcall target="phpcpd"/>
			<antcall target="phpcs-ci"/>
			<antcall target="phploc"/>
			<antcall target="phpdox"/>
		</parallel>
	</target>

	<!-- basic properties -->
	<property name="path.build" value="${basedir}/Build" />
	<property name="path.src" value="${path.build}/Sources" />
	<property name="path.vendorbin" value="${path.build}/Libraries/bin" />
	<property name="path.classes" value="${basedir}/Classes" />

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${path.build}/api"/>
		<delete dir="${path.build}/code-browser"/>
		<delete dir="${path.build}/coverage"/>
		<delete dir="${path.build}/logs"/>
		<delete dir="${path.build}/pdepend"/>
		<delete dir="${path.src}"/>
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${path.build}/api"/>
		<mkdir dir="${path.build}/code-browser"/>
		<mkdir dir="${path.build}/coverage"/>
		<mkdir dir="${path.build}/logs"/>
		<mkdir dir="${path.build}/pdepend"/>
		<mkdir dir="${path.build}/phpdox"/>
		<mkdir dir="${path.src}"/>
		<copy todir="${path.src}">
			<fileset dir="${path.classes}" />
		</copy>
	</target>

	<!-- Add vendors or code will fail -->
	<target name="vendors" depends="clean" description="Add Vendors">
		<exec executable="composer" dir="${path.build}">
			<arg value='update' />
			<arg value="--dev"/>
		</exec>
	</target>

	<!-- Add vendors or code will fail -->
	<target name="vendors-ci" depends="clean" description="Add Vendors">
		<exec executable="composer" dir="${path.build}">
			<arg value='install' />
			<arg value='--dev' />
			<arg value="--prefer-dist"/>
		</exec>
	</target>

	<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="${path.vendorbin}/phpmd">
			<arg path="${path.src}" />
			<arg value="text" />
			<arg path="${path.build}/phpmd.xml" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="${path.vendorbin}/phpmd">
			<arg path="${path.src}" />
			<arg value="xml" />
			<arg value="${path.build}/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${path.build}/logs/pmd.xml" />
		</exec>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="${path.vendorbin}/phploc" >
			<arg value="--log-csv" />
			<arg value="${path.build}/logs/phploc.csv" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="${path.vendorbin}/pdepend">
			<arg value="--jdepend-xml=${path.build}/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${path.build}/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${path.build}/pdepend/overview-pyramid.svg" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="phpcs"
		 description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="${path.vendorbin}/phpcs">
			<arg value="--report=checkstyle" />
			<arg value="--extensions=php" />
			<arg value="--standard=TYPO3CMS" />
			<arg path="${path.src}" />
		</exec>
	 </target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="${path.vendorbin}/phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${path.build}/logs/checkstyle.xml" />
			<arg value="--extensions=php" />
			<arg value="--standard=TYPO3CMS" />
			<arg value="-n" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="${path.vendorbin}/phpcpd">
			<arg value="--log-pmd" />
			<arg value="${path.build}/logs/pmd-cpd.xml" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="${path.vendorbin}/phpunit"/>
	</target>
</project>